% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ATE_nested.R
\name{ATE_nested}
\alias{ATE_nested}
\title{Transporting ATE from multi-source population to an internal source-specific population}
\usage{
ATE_nested(
  X,
  Y,
  S,
  A,
  cross_fitting = FALSE,
  replications = 10L,
  source_model = "MN.glmnet",
  source_model_args = list(),
  treatment_model_type = "separate",
  treatment_model_args = list(),
  outcome_model_args = list()
)
}
\arguments{
\item{X}{The covariate data frame with \eqn{n=n_1+...+n_{|S|}} rows and \eqn{p} columns. Character variables will be converted to factors. Numeric variables will be used as is.}

\item{Y}{The length \eqn{n} outcome vector.}

\item{S}{The source indicator which is a length \eqn{n} vector or factor. If \code{S} is a factor, it will maintain its level order, otherwise it will be converted to a factor with default level order. The order will be carried over to the outputs and plots.}

\item{A}{The binary treatment (1 for treated and 0 for untreated), which is a length \eqn{n} vector.}

\item{cross_fitting}{Logical, indicating whether sample splitting and cross fitting procedure should be used.}

\item{replications}{Integer, the number of sample splitting and cross fitting replications to performe, if \code{cross_fitting = TRUE}. Default is \code{10L}.}

\item{source_model}{The (penalized) multinomial logistic regression for estimating \eqn{P(S=s|X)}. It has two options: "\code{MN.glmnet}" (default) and "\code{MN.nnet}", which use \pkg{glmnet} and \pkg{nnet} respectively.}

\item{source_model_args}{The arguments (in \pkg{glmnet} or \pkg{nnet}) for the source model.}

\item{treatment_model_type}{How the propensity score \eqn{P(A=1|X)=\sum_{s \in S} P(A=1|X, S=s)P(S=s|X)} is estimated. Options include "\code{separate}" (default) and "\code{joint}". If "\code{separate}", \eqn{P(A=1|X, S=s)} is estimated by regressing \eqn{A} on \eqn{X} within each specific internal source population \eqn{S=s}. If "\code{joint}", \eqn{P(A=1|X, S=s)} is estimated by regressing \eqn{A} on \eqn{X} and \eqn{S} using the multi-source population.}

\item{treatment_model_args}{The arguments (in \pkg{SuperLearner}) for the treatment model.}

\item{outcome_model_args}{The arguments (in \pkg{SuperLearner}) for the outcome model.}
}
\value{
An object of class "ATE_nested". This object is a list with the following elements:
  \item{df_dif}{A data frame containing the treatment effect (mean difference) estimates for the internal populations.}
  \item{df_A0}{A data frame containing the potential outcome mean estimates under A = 0 for the internal populations.}
  \item{df_A1}{A data frame containing the potential outcome mean estimates under A = 1 for the internal populations.}
  \item{fit_outcome}{Fitted outcome model.}
  \item{fit_source}{Fitted source model.}
  \item{fit_treatment}{Fitted treatment model(s).}
}
\description{
Doubly-robust and efficient estimator for the average treatment effects of each internal source-specific target population using \eqn{m} multi-source data.
}
\details{
Data structure: multi-source data contain outcome Y, source S, treatment A, and covariates X (\eqn{n \times p}).
The estimator is doubly robust and non-parametrically efficient. Three nuisance parameters are estimated,
the source model \eqn{q_s(X)=P(S=s|X)}, the propensity score model \eqn{\eta_a(X)=P(A=a|X)}, and the outcome model \eqn{\mu_a(X)=E(Y|X, A=a)}. The nuisance parameters are allowed to be estimated by \pkg{SuperLearner}. The estimator is
\deqn{
 \dfrac{\widehat \kappa}{n}\sum\limits_{i=1}^{n} \Bigg[ I(S_i = s) \widehat \mu_a(X_i)
 +I(A_i = a) \dfrac{\widehat q_{s}(X_i)}{\widehat \eta_a(X_i)}  \Big\{ Y_i - \widehat \mu_a(X_i) \Big\} \Bigg],
}
where \eqn{\widehat \kappa=\{n^{-1} \sum_{i=1}^n I(S_i=s)\}^{-1}}.
To achieve the non-parametrical efficiency and asymptotic normality, it requires that \eqn{||\widehat \mu_a(X) -\mu_a(X)||\big\{||\widehat \eta_a(X) -\eta_a(X)||+||\widehat q_s(X) -q_s(X)||\big\}=o_p(n^{-1/2})}.
In addition, to avoid the Donsker class assumption, the estimation is done by sample splitting and cross-fitting.
When one source of data is a randomized trial, it is still recommended to estimate the propensity score for optimal efficiency.
Since the non-parametric influence function is the same as the efficient semi-parametric efficient influence function when the propensity score is known and incorporating the assumption \eqn{Y\perp S|(X, A=a)}, the inference stays the same.
}
\examples{
an <- ATE_nested(
  X = dat_nested[, 2:10],
  Y = dat_nested$Y,
  S = dat_nested$S,
  A = dat_nested$A,
  source_model = "MN.glmnet",
  source_model_args = list(),
  treatment_model_type = "separate",
  treatment_model_args = list(
    family = binomial(),
    SL.library = c("SL.glmnet", "SL.nnet", "SL.glm"),
    cvControl = list(V = 5L)
  ),
  outcome_model_args = list(
    family = gaussian(),
    SL.library = c("SL.glmnet", "SL.nnet", "SL.glm"),
    cvControl = list(V = 5L)
  )
)
}
\references{
Robertson, S.E., Steingrimsson, J.A., Joyce, N.R., Stuart, E.A., & Dahabreh, I.J. (2021). \emph{Center-specific causal inference with multicenter trials: Reinterpreting trial evidence in the context of each participating center}. arXiv preprint arXiv:2104.05905.
}
